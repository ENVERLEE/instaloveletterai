{"ast":null,"code":"var _jsxFileName = \"/Users/ROSA/Desktop/insta/project-root/client/src/components/QuestionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [\"당신이 가장 좋아하는 시간대는?\", \"세상에서 가장 좋아하는 냄새는?\", \"당신이 꿈꾸는 여행지는 어디인가요?\", \"특별한 날에 가장 듣고 싶은 노래는?\", \"가장 좋아하는 계절은?\", \"만약 하루 동안 동물이 될 수 있다면, 어떤 동물이 되고 싶나요?\", \"스트레스를 풀 때 가장 자주 하는 행동은?\", \"어릴 적 꿈꿨던 직업은 무엇인가요?\", \"인생에서 가장 잊지 못할 순간은?\", \"당신이 가장 사랑하는 사람에게 하고 싶은 한마디는?\"];\nconst choices = [[\"아침\", \"점심\", \"저녁\", \"밤\"], [\"바다 냄새\", \"커피 향\", \"비 냄새\", \"숲 속 향기\"], [\"파리\", \"몰디브\", \"도쿄\", \"뉴욕\"], [\"달콤한 팝송\", \"신나는 록\", \"잔잔한 발라드\", \"재즈\"], [\"봄\", \"여름\", \"가을\", \"겨울\"], [\"고양이\", \"강아지\", \"새\", \"사자\"], [\"산책\", \"음악 듣기\", \"명상\", \"독서\"], [\"우주비행사\", \"의사\", \"예술가\", \"선생님\"], [\"졸업식\", \"첫사랑\", \"가족과의 여행\", \"성취감 느낄 때\"], [\"늘 사랑해\", \"항상 고마워\", \"당신은 나의 영웅\", \"함께해서 행복해\"]];\nconst QuestionPage = () => {\n  _s();\n  const [answer, setAnswer] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    name,\n    answers = []\n  } = location.state || {}; // location.state가 정의되지 않은 경우를 처리\n\n  const questionIndex = parseInt(window.location.pathname.split('/').pop()) - 1;\n  const handleNext = () => {\n    const updatedAnswers = [...answers, answer];\n    if (questionIndex < questions.length - 1) {\n      navigate(`/question/${questionIndex + 2}`, {\n        state: {\n          name,\n          answers: updatedAnswers\n        }\n      });\n    } else {\n      navigate('/result', {\n        state: {\n          name,\n          answers: updatedAnswers\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: questions[questionIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), choices[questionIndex].map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `choice-${index}`,\n        name: \"choice\",\n        value: choice,\n        checked: answer === choice,\n        onChange: e => setAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `choice-${index}`,\n        children: choice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: !answer,\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionPage, \"AcPjsZ/oRU3mLrFnR1pQkAhW56w=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuestionPage;\nexport default QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","questions","choices","QuestionPage","_s","answer","setAnswer","navigate","location","name","answers","state","questionIndex","parseInt","window","pathname","split","pop","handleNext","updatedAnswers","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","choice","index","type","id","value","checked","onChange","e","target","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ROSA/Desktop/insta/project-root/client/src/components/QuestionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst questions = [\n  \"당신이 가장 좋아하는 시간대는?\",\n  \"세상에서 가장 좋아하는 냄새는?\",\n  \"당신이 꿈꾸는 여행지는 어디인가요?\",\n  \"특별한 날에 가장 듣고 싶은 노래는?\",\n  \"가장 좋아하는 계절은?\",\n  \"만약 하루 동안 동물이 될 수 있다면, 어떤 동물이 되고 싶나요?\",\n  \"스트레스를 풀 때 가장 자주 하는 행동은?\",\n  \"어릴 적 꿈꿨던 직업은 무엇인가요?\",\n  \"인생에서 가장 잊지 못할 순간은?\",\n  \"당신이 가장 사랑하는 사람에게 하고 싶은 한마디는?\",\n];\n\nconst choices = [\n  [\"아침\", \"점심\", \"저녁\", \"밤\"],\n  [\"바다 냄새\", \"커피 향\", \"비 냄새\", \"숲 속 향기\"],\n  [\"파리\", \"몰디브\", \"도쿄\", \"뉴욕\"],\n  [\"달콤한 팝송\", \"신나는 록\", \"잔잔한 발라드\", \"재즈\"],\n  [\"봄\", \"여름\", \"가을\", \"겨울\"],\n  [\"고양이\", \"강아지\", \"새\", \"사자\"],\n  [\"산책\", \"음악 듣기\", \"명상\", \"독서\"],\n  [\"우주비행사\", \"의사\", \"예술가\", \"선생님\"],\n  [\"졸업식\", \"첫사랑\", \"가족과의 여행\", \"성취감 느낄 때\"],\n  [\"늘 사랑해\", \"항상 고마워\", \"당신은 나의 영웅\", \"함께해서 행복해\"],\n];\n\nconst QuestionPage = () => {\n  const [answer, setAnswer] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { name, answers = [] } = location.state || {}; // location.state가 정의되지 않은 경우를 처리\n\n  const questionIndex = parseInt(window.location.pathname.split('/').pop()) - 1;\n\n  const handleNext = () => {\n    const updatedAnswers = [...answers, answer];\n    if (questionIndex < questions.length - 1) {\n      navigate(`/question/${questionIndex + 2}`, { state: { name, answers: updatedAnswers } });\n    } else {\n      navigate('/result', { state: { name, answers: updatedAnswers } });\n    }\n  };\n\n  return (\n    <div>\n      <h1>{questions[questionIndex]}</h1>\n      {choices[questionIndex].map((choice, index) => (\n        <div key={index}>\n          <input\n            type=\"radio\"\n            id={`choice-${index}`}\n            name=\"choice\"\n            value={choice}\n            checked={answer === choice}\n            onChange={(e) => setAnswer(e.target.value)}\n          />\n          <label htmlFor={`choice-${index}`}>{choice}</label>\n        </div>\n      ))}\n      <button onClick={handleNext} disabled={!answer}>다음</button>\n    </div>\n  );\n};\n\nexport default QuestionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}